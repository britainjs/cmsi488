PARSER_BEGIN(SyntaxChecker)

public class SyntaxChecker {
    public static void main(String[] args) {
        try {
            new SyntaxChecker(new java.io.StringReader(args[0])).S();
            System.out.println("Syntax is okay");
        } catch (Throwable e) {
            // Catching Throwable is ugly but JavaCC throws Error objects!
            System.out.println("Syntax check failed: " + e.getMessage());
        }
    }
}

PARSER_END(SyntaxChecker)

SKIP:  { " " | "\t" | "\n" | "\r"                    }
TOKEN: { "(" | ")" | "+" | "*" | ":=" | <ID: (["a"-"z"])+> | <NUM: (["0"-"9"])+> }

void EXP(): {} { <ID>  ID_TAIL() | TERM() TERM_TAIL() }
void ID_TAIL(): {} {":=" EXP() | FACTOR_TAIL() TERM_TAIL()}
void TERM_TAIL(): {} { ("+" TERM() TERM_TAIL())?      }
void TERM(): {} { FACTOR() FACTOR_TAIL() }
void FACTOR_TAIL(): {} { ("*" FACTOR() FACTOR_TAIL())? }
void FACTOR(): {} { "(" EXP() ")"}
